<launch>
	<param name="/use_sim_time" value="true"/>
	
	<!-- robot name and namespace -->
	<arg name="name"/>

	<!-- initial position -->
	<arg name="initial_pose_x" default="2.0"/>
	<arg name="initial_pose_y" default="2.0"/>
	<arg name="initial_pose_a" default="0.0"/>

	<group ns="$(arg name)">
		<param name="tf_prefix" value="/$(arg name)"/>

		<remap from="map" to="/map"/>

		<!--  ***************** Robot Model *****************  -->
		<include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
			<arg name="base" value="kobuki" />
			<arg name="stacks" value="hexagons" />
			<arg name="3d_sensor" value="asus_xtion_pro" />
		</include>
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" required="true">
			<param name="use_gui" value="false"/>
		</node>

<!--		Command Velocity multiplexer
		<node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager" required="true"/>
		<node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager" required="true">
			<param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
			<remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
		</node> -->

<!--		Velocity smoother
		<node pkg="nodelet" type="nodelet" name="navigation_velocity_smoother" args="load yocs_velocity_smoother/VelocitySmootherNodelet /mobile_base_nodelet_manager" required="true">
			<rosparam file="$(find turtlebot_bringup)/param/defaults/smoother.yaml" command="load"/>
			<remap from="navigation_velocity_smoother/smooth_cmd_vel" to="cmd_vel_mux/input/navi"/>
			<remap from="navigation_velocity_smoother/odometry" to="odom"/>
			<remap from="navigation_velocity_smoother/robot_cmd_vel" to="mobile_base/commands/velocity"/>
		</node> -->

<!--		Safety controller
		<node pkg="nodelet" type="nodelet" name="kobuki_safety_controller" args="load kobuki_safety_controller/SafetyControllerNodelet /mobile_base_nodelet_manager" required="true">
			<remap from="kobuki_safety_controller/cmd_vel" to="cmd_vel_mux/input/safety_controller"/>
			<remap from="kobuki_safety_controller/events/bumper" to="mobile_base/events/bumper"/>
			<remap from="kobuki_safety_controller/events/cliff" to="mobile_base/events/cliff"/>
			<remap from="kobuki_safety_controller/events/wheel_drop" to="mobile_base/events/wheel_drop"/>
		</node> -->

		<!-- Move -->
		<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" required="true">
			<rosparam file="params/costmap_common_params.yaml" command="load" ns="global_costmap" />
			<rosparam file="params/costmap_common_params.yaml" command="load" ns="local_costmap" />   
			<rosparam file="params/local_costmap_params.yaml" command="load" />   
			<rosparam file="params/global_costmap_params.yaml" command="load" />
			<rosparam file="params/dwa_local_planner_params.yaml" command="load" />
			<rosparam file="params/move_base_params.yaml" command="load" />
			<rosparam file="params/global_planner_params.yaml" command="load" />
			<rosparam file="params/navfn_global_planner_params.yaml" command="load" />

			<!-- reset frame_id parameters using user input data -->
			<param name="global_costmap/global_frame"	value="/map"/>
			<param name="global_costmap/robot_base_frame"	value="/$(arg name)/base_link"/>
			<param name="local_costmap/global_frame"	value="/$(arg name)/odom"/>
			<param name="local_costmap/robot_base_frame"	value="/$(arg name)/base_link"/>
			<param name="DWAPlannerROS/global_frame_id"	value="/map"/>

			<remap from="scan" to="base_scan"/>
<!--			<remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/> -->
		</node>

		<!-- AMCL -->
		<node pkg="amcl" type="amcl" name="amcl" required="true">
			<param name="use_map_topic"             value="true"/>
			<!-- Publish scans from best pose at a max of 10 Hz -->
			<param name="odom_model_type"           value="diff"/>
			<param name="odom_alpha5"               value="0.1"/>
			<param name="gui_publish_rate"          value="10.0"/>
			<param name="laser_max_beams"           value="60"/>
			<param name="laser_max_range"           value="12.0"/>
			<param name="min_particles"             value="500"/>
			<param name="max_particles"             value="2000"/>
			<param name="kld_err"                   value="0.05"/>
			<param name="kld_z"                     value="0.99"/>
			<param name="odom_alpha1"               value="0.2"/>
			<param name="odom_alpha2"               value="0.2"/>
			<!-- translation std dev, m -->
			<param name="odom_alpha3"               value="0.2"/>
			<param name="odom_alpha4"               value="0.2"/>
			<param name="laser_z_hit"               value="0.5"/>
			<param name="laser_z_short"             value="0.05"/>
			<param name="laser_z_max"               value="0.05"/>
			<param name="laser_z_rand"              value="0.5"/>
			<param name="laser_sigma_hit"           value="0.2"/>
			<param name="laser_lambda_short"        value="0.1"/>
			<param name="laser_model_type"          value="likelihood_field"/>
			<!-- <param name="laser_model_type" value="beam"/> -->
			<param name="laser_likelihood_max_dist" value="2.0"/>
			<param name="update_min_d"              value="0.25"/>
			<param name="update_min_a"              value="0.2"/>
			<param name="odom_frame_id"             value="/$(arg name)/odom"/> 
			<param name="base_frame_id"             value="/$(arg name)/base_link"/> 
			<param name="global_frame_id"           value="/map"/>
			<param name="resample_interval"         value="1"/>
			<!-- Increase tolerance because the computer can get quite busy -->
			<param name="transform_tolerance"       value="1.0"/>
			<param name="recovery_alpha_slow"       value="0.0"/>
			<param name="recovery_alpha_fast"       value="0.0"/>
			<param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
			<param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
			<param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
			<remap from="scan"                      to="base_scan"/>
		</node>
	</group>
</launch>
